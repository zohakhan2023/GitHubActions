name: 041-spellcheck

on:
  pull_request:
    branches: [main]
  push: 
    branches: [main]
    paths: '**/*.md'

  workflow_dispatch:

jobs:
  spell-ckeck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.6.0
      - uses: streetsidesoftware/cspell-action@v3
        name: Spell Check
        id: spellcheck
        continue-on-error: true
        with:
          github_token: ${{ github.token }} # Github token used to fetch the list of changed files in the commit
          config: cspell.config.yaml
          inline: warning # Notification level to use with inline reporting of spelling errors.
          root: '.' # The point in the directory tree to start spell checking.
          check_dot_files: false # Check files and directories starting with `.`.
          strict: true # Determines if the action should be failed if any spelling issues are found.
          incremental_files_only: false # Limit the files checked to the ones in the pull request or push.
          verbose: false # Log progress and other information during the action execution.
          files: |
            README.md
            # **/*.md
            !dist/**/*.{ts,js}
          # Define glob patterns to filter the files to be checked. Use a new line between patterns to define multiple patterns.
          # The default is to check ALL files that were changed in in the pull_request or push.
          # Note: `ignorePaths` defined in cspell.json still apply.
          # Example:
          # files: |
          #   **/*.{ts,js}
          #   !dist/**/*.{ts,js}
          #   # Hidden directories need an explicit .* to be included
          #   .*/**/*.yml
          #
          # To not check hidden files, use:
          # files: "**"
          #
          # Default: ALL files

          # outputs:
          #   success:
          #     description: |
          #       "true" if no spelling issues were found, otherwise "false".
          #   number_of_files_checked:
          #     description: |
          #       The actual number of files that were checked.
          #   number_of_issues:
          #     description: |
          #       The number of issues found.
          #   number_of_files_with_issues:
          #     description: |
          #       The number of files that had issues.
          #   files_with_issues:
          #     description: |
          #       List of files with issues. Use `fromJSON()` to decode.
          #       The files are relative to the repository root.
          #   results:
          #     description: |
          #       The JSON encoded results.

      - name: 'View results'
        run: |
          echo ${{ steps.spellcheck.outputs.number_of_files_checked }}
          echo ${{ steps.spellcheck.outputs.number_of_files_with_issues }}
          echo ${{ steps.spellcheck.outputs.files_with_issues }}
